name: CI Pipeline

on:
    push:
        branches: [ '*' ]
    pull_request:
        branches: [ 'main', 'develop' ]

jobs:
    build-and-test:
        runs-on: ubuntu-latest

        steps:
            -   name: Checkout code
                uses: actions/checkout@v4

            -   name: Setup Node.js
                uses: actions/setup-node@v4
                with:
                    node-version: '22'
                    cache: 'npm'

            -   name: Install Quasar CLI
                run: npm install -g @quasar/cli

            -   name: Install dependencies
                run: npm ci

            -   name: Run tests
                run: npm run test
                env:
                    NODE_ENV: test

            -   name: Build application
                run: quasar build
                env:
                    NODE_ENV: production

            # Prepare for deployment (save dist)
            -   name: Upload Frontend Build
                uses: actions/upload-artifact@v4
                with:
                    name: frontend-dist
                    path: dist

    build-and-push-docker-image:
        runs-on: ubuntu-latest
        needs: build-and-test

        permissions:
            contents: read
            packages: write

        steps:
            -   name: Checkout code
                uses: actions/checkout@v4

            -   name: Login to GitHub Container Registry
                uses: docker/login-action@v3
                with:
                    registry: ghcr.io
                    username: ${{ github.actor }}
                    password: ${{ secrets.POPCORN_TOKEN }}

            -   name: Extract image name
                id: extract
                run: |
                    REPO_LOWER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
                    echo "image_name=ghcr.io/$REPO_LOWER" >> $GITHUB_OUTPUT

            -   name: Build Docker Image
                run: |
                    docker build -f Dockerfile -t ${{ steps.extract.outputs.image_name }}:latest .
    

            -   name: Push Docker Image to GHCR
                run: |
                    docker push ${{ steps.extract.outputs.image_name }}:latest